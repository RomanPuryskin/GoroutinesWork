package main

import (
	"fmt"
	"sync"
	"time"
)

func parallelMultiply(a, b [][]int, workers int) [][]int {
	if len(a[0]) != len(b) {
		fmt.Println("количество столбцов в матрице A должно быть равно количеству строк в матрице B")
		return [][]int{}
	}

	// проинициализируем результиурющую матрицу
	result := make([][]int, len(a))
	for i := range result {
		result[i] = make([]int, len(b[0]))
	}

	// разделим работу на (workers) горутин

	rowsPerThread := (len(a) + workers - 1) / workers

	var wg sync.WaitGroup

	for i := 0; i < workers; i++ {
		// для каждой горутины вычислим диапазон значений для подсчета
		start := i * rowsPerThread
		end := (i + 1) * rowsPerThread
		if end > len(a) {
			end = len(a)
		}

		wg.Add(1)
		go func(start, end int) {
			defer wg.Done()
			for j := start; j < end; j++ {
				for l := 0; l < len(b[0]); l++ {
					for k := 0; k < len(a[0]); k++ {
						result[j][l] += a[j][k] * b[k][l]
					}
				}
			}
		}(start, end)
	}

	wg.Wait()
	return result
}

func main() {
	A := [][]int{
		{130, 131, 124, 210, 413, 453, 676, 877, 980, 181, 135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 565, 767, 365, 656},
		{135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 565, 767, 365, 656},
		{416, 174, 198, 023, 493, 989, 295, 796, 457, 821, 135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 565, 767, 365, 656},
		{103, 567, 404, 904, 394, 565, 382, 464, 847, 516, 135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 565, 767, 365, 656},
		{160, 161, 612, 620, 163, 185, 658, 6787, 328, 890, 135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 565, 767, 365, 656},
		{889, 161, 172, 260, 613, 455, 677, 8677, 970, 171, 135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 565, 767, 365, 656},
		{135, 134, 135, 272, 374, 447, 372, 746, 877, 166, 135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 565, 767, 365, 656},
		{160, 170, 189, 293, 4366, 988, 265, 766, 545, 816, 135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 565, 767, 365, 656},
		{130, 607, 474, 890, 534, 556, 326, 446, 867, 5666, 135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 565, 767, 365, 656},
		{100, 1331, 123, 260, 183, 105, 65, 6007, 372, 899, 135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 565, 767, 365, 656},
		{130, 131, 124, 210, 413, 453, 676, 877, 980, 181, 135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 565, 767, 365, 656},
		{135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 565, 767, 365, 656},
		{416, 174, 198, 023, 493, 989, 295, 796, 457, 821, 135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 565, 767, 365, 656},
		{103, 567, 404, 904, 394, 565, 382, 464, 847, 516, 135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 565, 767, 365, 656},
		{160, 161, 612, 620, 163, 185, 658, 6787, 328, 890, 135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 565, 767, 365, 656},
		{889, 161, 172, 260, 613, 455, 677, 8677, 970, 171, 135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 565, 767, 365, 656},
		{135, 134, 135, 272, 374, 447, 372, 746, 877, 166, 135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 565, 767, 365, 656},
		{160, 170, 189, 293, 4366, 988, 265, 766, 545, 816, 135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 565, 767, 365, 656},
		{130, 607, 474, 890, 534, 556, 326, 446, 867, 5666, 135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 565, 767, 365, 656},
		{100, 1331, 123, 260, 183, 105, 65, 6007, 372, 899, 135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 565, 767, 365, 656},
		{130, 131, 124, 210, 413, 453, 676, 877, 980, 181, 135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 565, 767, 365, 656},
		{135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 565, 767, 365, 656},
		{416, 174, 198, 023, 493, 989, 295, 796, 457, 821, 135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 565, 767, 365, 656},
		{103, 567, 404, 904, 394, 565, 382, 464, 847, 516, 135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 565, 767, 365, 656},
	}

	B := [][]int{
		{130, 131, 124, 210, 413, 453, 676, 877, 980, 181, 135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 565, 767, 365, 656},
		{135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 565, 767, 365, 656},
		{416, 174, 198, 023, 493, 989, 295, 796, 457, 821, 135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 565, 767, 365, 656},
		{103, 567, 404, 904, 394, 565, 382, 464, 847, 516, 135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 565, 767, 365, 656},
		{160, 161, 612, 620, 163, 185, 658, 6787, 328, 890, 135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 565, 767, 365, 656},
		{889, 161, 172, 260, 613, 455, 677, 8677, 970, 171, 135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 565, 767, 365, 656},
		{135, 134, 135, 272, 374, 447, 372, 746, 877, 166, 135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 565, 767, 365, 656},
		{160, 170, 189, 293, 4366, 988, 265, 766, 545, 816, 135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 565, 767, 365, 656},
		{130, 607, 474, 890, 534, 556, 326, 446, 867, 5666, 135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 565, 767, 365, 656},
		{100, 1331, 123, 260, 183, 105, 65, 6007, 372, 899, 135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 565, 767, 365, 656},
		{130, 131, 124, 210, 413, 453, 676, 877, 980, 181, 135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 565, 767, 365, 656},
		{135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 565, 767, 365, 656},
		{416, 174, 198, 023, 493, 989, 295, 796, 457, 821, 135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 565, 767, 365, 656},
		{103, 567, 404, 904, 394, 565, 382, 464, 847, 516, 135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 565, 767, 365, 656},
		{160, 161, 612, 620, 163, 185, 658, 6787, 328, 890, 135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 565, 767, 365, 656},
		{889, 161, 172, 260, 613, 455, 677, 8677, 970, 171, 135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 565, 767, 365, 656},
		{135, 134, 135, 272, 374, 447, 372, 746, 877, 166, 135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 565, 767, 365, 656},
		{160, 170, 189, 293, 4366, 988, 265, 766, 545, 816, 135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 565, 767, 365, 656},
		{130, 607, 474, 890, 534, 556, 326, 446, 867, 5666, 135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 565, 767, 365, 656},
		{100, 1331, 123, 260, 183, 105, 65, 6007, 372, 899, 135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 565, 767, 365, 656},
		{130, 131, 124, 210, 413, 453, 676, 877, 980, 181, 135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 565, 767, 365, 656},
		{135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 565, 767, 365, 656},
		{416, 174, 198, 023, 493, 989, 295, 796, 457, 821, 135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 565, 767, 365, 656},
		{103, 567, 404, 904, 394, 565, 382, 464, 847, 516, 135, 154, 155, 252, 354, 444, 323, 763, 873, 136, 565, 767, 365, 656},
	}

	for i := 1; i <= 5; i++ {
		start1 := time.Now()
		parallelMultiply(A, B, i)
		duration1 := time.Since(start1)
		fmt.Println("При", i, "потоках:", duration1.Microseconds())
	}
}
